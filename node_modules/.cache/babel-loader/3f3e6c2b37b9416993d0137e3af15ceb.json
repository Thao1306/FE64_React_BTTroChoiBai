{"ast":null,"code":"var _jsxFileName = \"D:\\\\KA\\\\HOC HANH\\\\H\\u1ECCC L\\u1EACP TR\\xCCNH 2021\\\\FRONTEND64_20.03-27.09.2021\\\\Buoi33_17.07.2021\\\\Tro-choi-bai\\\\src\\\\pages\\\\Home\\\\index.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\"; // React hook là những function cho ta sử dụng các tính năng của state, lifecycle =>PHẢI ĐƯỢC ĐẶT TRÊN CÙNG VÀ KO LỒNG TRONG BẤT CỨ HÀM NÀO KHÁC\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"This field is requied!\"),\n  email: yup.string().required(\"This field is requied\").email(\"Invalid email!\"),\n  phone: yup.string().required(\"This field is requied\").matches(/^[0-9]+$/, \"Invalid phone number!\")\n});\n\nconst Home = () => {\n  const [isGameStart, setIsGameStart] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    validationSchema: validationSchema,\n    //có thể viết validationSchema không do biến trùng với key\n    validateOnMount: true // cho chạy hàm check validationSchema luôn, nên cho chạy luôn vì nếu ko bật thì mới vào ko nhập nó sẽ ko bắt lỗi mà click btn thì chạy handleSubmit luôn\n\n  });\n  const setAllTouched = useCallback(() => {\n    Object.keys(formik.values).forEach(key => {\n      formik.setFieldTouched(key);\n      console.log(Object.keys(formik.values));\n    });\n  }, [formik]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    setAllTouched();\n    console.log(formik.touched);\n    if (!formik.isValid) return; //check nếu form ko có lỗi (ko có false trong bất kỳ trường nào), thì mới cho vào game\n\n    dispatch({\n      type: \"SET_PLAYERS\",\n      payload: { ...formik.values,\n        totalPoint: 25000,\n        cards: []\n      }\n    });\n    setIsGameStart(true);\n  }, [formik]);\n\n  const setDefaultPlayer = () => {\n    const defaultPlayer = {\n      username: \"Thao.Le\",\n      email: \"Thao@gmail.com\",\n      phone: \"123\"\n    };\n    formik.setValues(defaultPlayer);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isGameStart ? /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"diplay-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \" Welcome to Pocker Center\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Fill your info and start\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-25 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"username\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"username\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), formik.touched.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, formik.errors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"email\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), formik.touched.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, formik.errors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"phone\",\n    value: formik.values.phone,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"phone\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }), formik.touched.phone && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, formik.errors.phone), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Start new Game\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: setDefaultPlayer,\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Set dafault player\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/KA/HOC HANH/HỌC LẬP TRÌNH 2021/FRONTEND64_20.03-27.09.2021/Buoi33_17.07.2021/Tro-choi-bai/src/pages/Home/index.jsx"],"names":["React","useState","useCallback","Game","useFormik","yup","useDispatch","validationSchema","object","shape","username","string","required","email","phone","matches","Home","isGameStart","setIsGameStart","dispatch","formik","initialValues","validateOnMount","setAllTouched","Object","keys","values","forEach","key","setFieldTouched","console","log","handleSubmit","e","preventDefault","touched","isValid","type","payload","totalPoint","cards","setDefaultPlayer","defaultPlayer","setValues","width","height","display","flexDirection","alignItems","justifyContent","handleChange","handleBlur","errors"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport Game from \"../Game\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// React hook là những function cho ta sử dụng các tính năng của state, lifecycle =>PHẢI ĐƯỢC ĐẶT TRÊN CÙNG VÀ KO LỒNG TRONG BẤT CỨ HÀM NÀO KHÁC\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required(\"This field is requied!\"),\r\n  email: yup.string().required(\"This field is requied\").email(\"Invalid email!\"),\r\n  phone: yup\r\n    .string()\r\n    .required(\"This field is requied\")\r\n    .matches(/^[0-9]+$/, \"Invalid phone number!\"),\r\n});\r\n\r\nconst Home = () => {\r\n  const [isGameStart, setIsGameStart] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    },\r\n    validationSchema: validationSchema, //có thể viết validationSchema không do biến trùng với key\r\n    validateOnMount: true, // cho chạy hàm check validationSchema luôn, nên cho chạy luôn vì nếu ko bật thì mới vào ko nhập nó sẽ ko bắt lỗi mà click btn thì chạy handleSubmit luôn\r\n  });\r\n  const setAllTouched = useCallback(() => {\r\n    Object.keys(formik.values).forEach((key) => {\r\n      formik.setFieldTouched(key);\r\n      console.log(Object.keys(formik.values));\r\n    });\r\n  }, [formik]);\r\n\r\n  const handleSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n    setAllTouched();\r\n    console.log(formik.touched);\r\n    if (!formik.isValid) return; //check nếu form ko có lỗi (ko có false trong bất kỳ trường nào), thì mới cho vào game\r\n    dispatch({\r\n      type: \"SET_PLAYERS\",\r\n      payload: { ...formik.values, totalPoint: 25000, cards: [] },\r\n    });\r\n\r\n    setIsGameStart(true);\r\n  }, [formik]);\r\n\r\n  const setDefaultPlayer = () => {\r\n    const defaultPlayer = {\r\n      username: \"Thao.Le\",\r\n      email: \"Thao@gmail.com\",\r\n      phone: \"123\",\r\n    };\r\n    formik.setValues(defaultPlayer);\r\n  };\r\n  return (\r\n    <>\r\n      {isGameStart ? (\r\n        <Game />\r\n      ) : (\r\n        <div\r\n          className=\"text-center\"\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1 className=\"diplay-4 mb-5\"> Welcome to Pocker Center</h1>\r\n          <h3>Fill your info and start</h3>\r\n          <form onSubmit={handleSubmit} className=\"w-25 mx-auto\">\r\n            <input\r\n              type=\"input\"\r\n              name=\"username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"username\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.username && (\r\n              <p className=\"text-danger\">{formik.errors.username}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              name=\"email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"email\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.email && (\r\n              <p className=\"text-danger\">{formik.errors.email}</p>\r\n            )}\r\n\r\n            <input\r\n              type=\"input\"\r\n              name=\"phone\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"phone\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.phone && (\r\n              <p className=\"text-danger\">{formik.errors.phone}</p>\r\n            )}\r\n\r\n            <button className=\"btn btn-success\">Start new Game</button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={setDefaultPlayer}\r\n              className=\"btn btn-info\"\r\n            >\r\n              Set dafault player\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}