{"ast":null,"code":"import axios from \"axios\";\nexport const drawCardAction = (deckCard, playList) => {\n  axios({\n    method: \"GET\",\n    url: `http://deckofcardsapi.com/api/deck/${deckCard.deck_id}/draw/?count=12`\n  }).then(res => {\n    const players = [...playList]; //chia bài\n\n    for (const i in res.data.cards) {\n      const playerIndex = i % 4;\n      players[playerIndex].cards.push(res.data.cards[i]); //i = 0, playerIndex = 0 => card[0] => player[0]\n      //i = 1, playerIndex = 1 => card[1] => player[1]\n      //i = 2, playerIndex = 2 => card[2] => player[2]\n      //i = 3, playerIndex = 3 => card[3] => player[3]\n      //i = 4, playerIndex = 0 => card[4] => player[0]\n      //i = 5, playerIndex = 1 => card[5] => player[1]\n      //i = 6, playerIndex = 2 => card[6] => player[2]\n    }\n\n    dispatch({\n      type: typeOfPlayer.SET_PLAYERS,\n      payload: players\n    });\n    dispatch({\n      type: typeOfCard.DRAW_CARDS\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["D:/KA/HOC HANH/HỌC LẬP TRÌNH 2021/FRONTEND64_20.03-27.09.2021/Buoi33_17.07.2021_React-function/Tro-choi-bai/src/redux/actions/cards.js"],"names":["axios","drawCardAction","deckCard","playList","method","url","deck_id","then","res","players","i","data","cards","playerIndex","push","dispatch","type","typeOfPlayer","SET_PLAYERS","payload","typeOfCard","DRAW_CARDS","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,QAAD,EAAUC,QAAV,KAAuB;AACjDH,EAAAA,KAAK,CAAC;AACFI,IAAAA,MAAM,EAAE,KADN;AAEFC,IAAAA,GAAG,EAAG,sCAAqCH,QAAQ,CAACI,OAAQ;AAF1D,GAAD,CAAL,CAIKC,IAJL,CAIWC,GAAD,IAAS;AACb,UAAMC,OAAO,GAAG,CAAC,GAAGN,QAAJ,CAAhB,CADa,CAEb;;AACA,SAAK,MAAMO,CAAX,IAAgBF,GAAG,CAACG,IAAJ,CAASC,KAAzB,EAAgC;AAC9B,YAAMC,WAAW,GAAGH,CAAC,GAAG,CAAxB;AACAD,MAAAA,OAAO,CAACI,WAAD,CAAP,CAAqBD,KAArB,CAA2BE,IAA3B,CAAgCN,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAeF,CAAf,CAAhC,EAF8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AACDK,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC,YAAY,CAACC,WAArB;AAAkCC,MAAAA,OAAO,EAAEV;AAA3C,KAAD,CAAR;AACAM,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEI,UAAU,CAACC;AAAnB,KAAD,CAAR;AACD,GArBL,EAsBKC,KAtBL,CAsBYC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAxBL;AAyBH,CA1BM","sourcesContent":["import axios from \"axios\";\r\nexport const drawCardAction = (deckCard,playList) => {\r\n    axios({\r\n        method: \"GET\",\r\n        url: `http://deckofcardsapi.com/api/deck/${deckCard.deck_id}/draw/?count=12`\r\n      })\r\n        .then((res) => {\r\n          const players = [...playList];\r\n          //chia bài\r\n          for (const i in res.data.cards) {\r\n            const playerIndex = i % 4;\r\n            players[playerIndex].cards.push(res.data.cards[i]);\r\n  \r\n            //i = 0, playerIndex = 0 => card[0] => player[0]\r\n            //i = 1, playerIndex = 1 => card[1] => player[1]\r\n            //i = 2, playerIndex = 2 => card[2] => player[2]\r\n            //i = 3, playerIndex = 3 => card[3] => player[3]\r\n            //i = 4, playerIndex = 0 => card[4] => player[0]\r\n            //i = 5, playerIndex = 1 => card[5] => player[1]\r\n            //i = 6, playerIndex = 2 => card[6] => player[2]\r\n          }\r\n          dispatch({ type: typeOfPlayer.SET_PLAYERS, payload: players });\r\n          dispatch({ type: typeOfCard.DRAW_CARDS });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n}"]},"metadata":{},"sourceType":"module"}