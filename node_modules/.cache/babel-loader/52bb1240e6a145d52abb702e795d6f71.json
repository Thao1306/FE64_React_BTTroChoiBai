{"ast":null,"code":"/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","map":{"version":3,"sources":["D:/KA/HOC HANH/HỌC LẬP TRÌNH 2021/FRONTEND64_20.03-27.09.2021/Buoi33_17.07.2021/Tro-choi-bai/node_modules/lodash/_arrayReduce.js"],"names":["arrayReduce","array","iteratee","accumulator","initAccum","index","length","module","exports"],"mappings":"AAAA;;;;;;;;;;;;AAYA,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,QAA5B,EAAsCC,WAAtC,EAAmDC,SAAnD,EAA8D;AAC5D,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGL,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACK,MADvC;;AAGA,MAAIF,SAAS,IAAIE,MAAjB,EAAyB;AACvBH,IAAAA,WAAW,GAAGF,KAAK,CAAC,EAAEI,KAAH,CAAnB;AACD;;AACD,SAAO,EAAEA,KAAF,GAAUC,MAAjB,EAAyB;AACvBH,IAAAA,WAAW,GAAGD,QAAQ,CAACC,WAAD,EAAcF,KAAK,CAACI,KAAD,CAAnB,EAA4BA,KAA5B,EAAmCJ,KAAnC,CAAtB;AACD;;AACD,SAAOE,WAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBR,WAAjB","sourcesContent":["/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n"]},"metadata":{},"sourceType":"script"}