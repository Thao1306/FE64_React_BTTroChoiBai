{"ast":null,"code":"var _jsxFileName = \"D:\\\\KA\\\\HOC HANH\\\\H\\u1ECCC L\\u1EACP TR\\xCCNH 2021\\\\FRONTEND64_20.03-27.09.2021\\\\Buoi33_17.07.2021_React-function\\\\Tro-choi-bai\\\\src\\\\pages\\\\Home\\\\index.jsx\";\nimport React, { useState, useCallback } from \"react\";\nimport Game from \"../Game\";\nimport { useFormik } from \"formik\";\nimport * as yup from \"yup\";\nimport { useDispatch } from \"react-redux\";\nimport useStyle from \"./style\"; // React hook là những function cho ta sử dụng các tính năng của state, lifecycle =>PHẢI ĐƯỢC ĐẶT TRÊN CÙNG VÀ KO LỒNG TRONG BẤT CỨ HÀM NÀO KHÁC\n\nconst validationSchema = yup.object().shape({\n  username: yup.string().required(\"This field is requied!\"),\n  email: yup.string().required(\"This field is requied\").email(\"Invalid email!\"),\n  phone: yup.string().required(\"This field is requied\").matches(/^[0-9]+$/, \"Invalid phone number!\")\n});\n\nconst Home = () => {\n  const [isGameStart, setIsGameStart] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      email: \"\",\n      phone: \"\"\n    },\n    validationSchema: validationSchema,\n    //có thể viết validationSchema không do biến trùng với key\n    validateOnMount: true // cho chạy hàm check validationSchema luôn, nên cho chạy luôn vì nếu ko bật thì mới vào ko\n\n  });\n  const setAllTouched = useCallback(() => {\n    Object.keys(formik.values).forEach(key => {\n      const a = formik.setFieldTouched(key);\n    });\n  }, [formik]);\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    setAllTouched(); //hàm: truyền cho formik.touch username/email/phone để giá trị formik.touch.username/email/phone turn true-> hiện thẻ <p> báo lỗi (vì lúc này formik.touch đang rỗng nên formik.touch.username sẽ turn false)\n\n    if (!formik.isValid) return; //check nếu form ko có lỗi (ko có false trong bất kỳ trường nào), thì mới cho vào game\n\n    dispatch({\n      type: \"ADD_PLAYERS\",\n      payload: { ...formik.values,\n        totalPoint: 25000,\n        cards: []\n      }\n    });\n    setIsGameStart(true);\n  }, [formik, setAllTouched, dispatch]);\n  const setDefaultPlayer = useCallback(() => {\n    const defaultPlayer = {\n      username: \"Thao.Le\",\n      email: \"Thao@gmail.com\",\n      phone: \"123\"\n    };\n    formik.setValues(defaultPlayer);\n  }, [formik]);\n  const classes = useStyle();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    style: {\n      width: \"100vw\",\n      height: \"100vh\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"diplay-4 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \" Welcome to Pocker Center\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Fill your info and start\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"w-25 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"username\",\n    value: formik.values.username,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur //onBlur: khi người dùng vào và ra khỏi form, hàm handleBlur của formik sẽ trả về true cho formik.touched giá trị true khi người dùng blur\n    ,\n    placeholder: \"username\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }), formik.touched.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, formik.errors.username), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"email\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), formik.touched.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, formik.errors.email), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"input\",\n    name: \"phone\",\n    value: formik.values.phone,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    placeholder: \"phone\",\n    className: \"w-100 form-control mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }), formik.touched.phone && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, formik.errors.phone), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Start new Game\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: setDefaultPlayer,\n    className: \"btn btn-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, \"Set dafault player\"))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/KA/HOC HANH/HỌC LẬP TRÌNH 2021/FRONTEND64_20.03-27.09.2021/Buoi33_17.07.2021_React-function/Tro-choi-bai/src/pages/Home/index.jsx"],"names":["React","useState","useCallback","Game","useFormik","yup","useDispatch","useStyle","validationSchema","object","shape","username","string","required","email","phone","matches","Home","isGameStart","setIsGameStart","dispatch","formik","initialValues","validateOnMount","setAllTouched","Object","keys","values","forEach","key","a","setFieldTouched","handleSubmit","e","preventDefault","isValid","type","payload","totalPoint","cards","setDefaultPlayer","defaultPlayer","setValues","classes","width","height","display","flexDirection","alignItems","justifyContent","title","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from \"react\";\r\nimport Game from \"../Game\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useStyle from \"./style\";\r\n\r\n// React hook là những function cho ta sử dụng các tính năng của state, lifecycle =>PHẢI ĐƯỢC ĐẶT TRÊN CÙNG VÀ KO LỒNG TRONG BẤT CỨ HÀM NÀO KHÁC\r\nconst validationSchema = yup.object().shape({\r\n  username: yup.string().required(\"This field is requied!\"),\r\n  email: yup.string().required(\"This field is requied\").email(\"Invalid email!\"),\r\n  phone: yup\r\n    .string()\r\n    .required(\"This field is requied\")\r\n    .matches(/^[0-9]+$/, \"Invalid phone number!\"),\r\n});\r\n\r\nconst Home = () => {\r\n  const [isGameStart, setIsGameStart] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n    },\r\n    validationSchema: validationSchema, //có thể viết validationSchema không do biến trùng với key\r\n    validateOnMount: true, // cho chạy hàm check validationSchema luôn, nên cho chạy luôn vì nếu ko bật thì mới vào ko\r\n  });\r\n  const setAllTouched = useCallback(() => {\r\n    Object.keys(formik.values).forEach((key) => {\r\n      const a = formik.setFieldTouched(key);\r\n    });\r\n  }, [formik]);\r\n\r\n  const handleSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      setAllTouched(); //hàm: truyền cho formik.touch username/email/phone để giá trị formik.touch.username/email/phone turn true-> hiện thẻ <p> báo lỗi (vì lúc này formik.touch đang rỗng nên formik.touch.username sẽ turn false)\r\n\r\n      if (!formik.isValid) return; //check nếu form ko có lỗi (ko có false trong bất kỳ trường nào), thì mới cho vào game\r\n      dispatch({\r\n        type: \"ADD_PLAYERS\",\r\n        payload: { ...formik.values, totalPoint: 25000, cards: [] },\r\n      });\r\n\r\n      setIsGameStart(true);\r\n    },\r\n    [formik, setAllTouched, dispatch]\r\n  );\r\n\r\n  const setDefaultPlayer = useCallback(() => {\r\n    const defaultPlayer = {\r\n      username: \"Thao.Le\",\r\n      email: \"Thao@gmail.com\",\r\n      phone: \"123\",\r\n    };\r\n    formik.setValues(defaultPlayer);\r\n  }, [formik]);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <>\r\n      {/* {isGameStart ? ( */}\r\n        <Game />\r\n      {/* ) : ( */}\r\n        <div\r\n          className=\"text-center\"\r\n          style={{\r\n            width: \"100vw\",\r\n            height: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <h1 className=\"diplay-4 mb-5\"> Welcome to Pocker Center</h1>\r\n          <h3 className={classes.title}>Fill your info and start</h3>\r\n          <form onSubmit={handleSubmit} className=\"w-25 mx-auto\">\r\n            <input\r\n              type=\"input\"\r\n              name=\"username\"\r\n              value={formik.values.username}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur} //onBlur: khi người dùng vào và ra khỏi form, hàm handleBlur của formik sẽ trả về true cho formik.touched giá trị true khi người dùng blur\r\n              placeholder=\"username\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.username && (\r\n              <p className=\"text-danger\">{formik.errors.username}</p>\r\n            )}\r\n            <input\r\n              type=\"input\"\r\n              name=\"email\"\r\n              value={formik.values.email}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"email\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.email && (\r\n              <p className=\"text-danger\">{formik.errors.email}</p>\r\n            )}\r\n\r\n            <input\r\n              type=\"input\"\r\n              name=\"phone\"\r\n              value={formik.values.phone}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              placeholder=\"phone\"\r\n              className=\"w-100 form-control mb-3\"\r\n            />\r\n            {formik.touched.phone && (\r\n              <p className=\"text-danger\">{formik.errors.phone}</p>\r\n            )}\r\n\r\n            <button className=\"btn btn-success\">Start new Game</button>\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={setDefaultPlayer}\r\n              className=\"btn btn-info\"\r\n            >\r\n              Set dafault player\r\n            </button>\r\n            {/* gắn type là button do để mặc định thì nó hiểu là submit thì sẽ có tác dụng tương tự nút start new game, nên gắn type button để gắn sự kiện onClick thôi */}\r\n          </form>\r\n        </div>\r\n      {/* )} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}