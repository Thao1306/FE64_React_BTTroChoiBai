{"ast":null,"code":"/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","map":{"version":3,"sources":["D:/KA/HOC HANH/HỌC LẬP TRÌNH 2021/FRONTEND64_20.03-27.09.2021/Buoi33_17.07.2021/Tro-choi-bai/node_modules/lodash/_overArg.js"],"names":["overArg","func","transform","arg","module","exports"],"mappings":"AAAA;;;;;;;;AAQA,SAASA,OAAT,CAAiBC,IAAjB,EAAuBC,SAAvB,EAAkC;AAChC,SAAO,UAASC,GAAT,EAAc;AACnB,WAAOF,IAAI,CAACC,SAAS,CAACC,GAAD,CAAV,CAAX;AACD,GAFD;AAGD;;AAEDC,MAAM,CAACC,OAAP,GAAiBL,OAAjB","sourcesContent":["/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n"]},"metadata":{},"sourceType":"script"}